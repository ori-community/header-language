{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Ori 2 Header Language",
    "scopeName": "source.wotwrh",
    "patterns": [
        { "include": "#uberState" },
        { "include": "#command" },
        { "include": "#annotation" },
        { "include": "#placeholder" },
        { "include": "#comment" }
    ],
    "repository": {
        "uberState": {
            "begin": "^(!)?\\d+\\|\\d+(=\\d+)?\\|",
            "end": "$|(?=//)",
            "captures": {
                "0": { "name": "keyword.control" },
                "1": { "name": "keyword" }
            },
            "patterns": [
                { "include": "#pickup" }
            ]
        },
        "pickup": {
            "patterns": [
                { "include": "#spiritLight" },
                { "include": "#resource" },
                { "include": "#ability" },
                { "include": "#shard" },
                { "include": "#syscommand" },
                { "include": "#teleporter" },
                { "include": "#message" },
                { "include": "#setUberState" },
                { "include": "#water" },
                { "include": "#bonusItem" },
                { "include": "#bonusUpgrade" },
                { "include": "#relic" },
                { "include": "#progressMessage" },
                { "include": "#wheelCommand" },
                { "include": "#shopCommand" },
                { "include": "placeholder" }
            ]
        },
        "spiritLight": {
            "match": "\\G(0\\|)\\d+\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "resource": {
            "match": "\\G1\\|[0-4]\\b",
            "name": "variable.other.enummember"
        },
        "ability": {
            "match": "\\G2\\|-?([03589]|1[45]|23|5[17]|62|7[47]|9[78]|1(0[0124689]|1[4568]|2[01]))\\b",
            "name": "variable.other.enummember"
        },
        "shard": {
            "match": "\\G3\\|-?([1234589]|1[3489]|2[235678]|3[02345689]|4[013467])\\b",
            "name": "variable.other.enummember"
        },
        "syscommand": {
            "patterns": [
                { "include": "#autosave" },
                { "include": "#setResource" },
                { "include": "#statue" },
                { "include": "#warp" },
                { "include": "#setPlayerResource" },
                { "include": "#setSpiritLight" },
                { "include": "#equip" },
                { "include": "#keybind" },
                { "include": "#if" },
                { "include": "#setSync" }
            ]
        },
        "autosave": {
            "match": "\\G4\\|[02]\\b",
            "name": "variable.other.enummember"
        },
        "setResource": {
            "match": "\\G4\\|1\\|[0-4]\\|(\\d+)\\b",
            "captures": {
                "0": { "name": "variable.other.enummember" },
                "1": { "name": "variable" }
            }
        },
        "statue": {
            "match": "\\G4\\|7\\|0\\|[01]\\b",
            "name": "variable.other.enummember"
        },
        "warp": {
            "match": "\\G(4\\|8\\|)\\d+([.,]\\d+)?\\|\\d+([.,]\\d+)?\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "setPlayerResource": {
            "match": "\\G(4\\|1[23]\\|)\\d+([.,]\\d+)?\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "setSpiritLight": {
            "match": "\\G(4\\|14\\|)\\d+\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "equip": {
            "match": "\\G4\\|15\\|[0-2]\\|(100[0-5]|20[01]\\d|300[0-5]|400\\d)\\b",
            "name": "variable.other.enummember"
        },
        "keybind": {
            "match": "\\G(4\\|16\\|)\\w+\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "if": {
            "begin": "\\G(4\\|1[7-9]\\|)(\\d+\\|\\d+\\|\\d+([.,]\\d+)?\\|)\\b",
            "end": "$|(?=//)",
            "captures": {
                "1": { "name": "variable.other.enummember" },
                "2": { "name": "keyword.control" }
            },
            "patterns": [
                { "include": "#pickup" }
            ]
        },
        "setSync": {
            "match": "\\G(4\\|2[01]\\|)\\d+\\|\\d+\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "teleporter": {
            "match": "\\G5\\|-?(\\d|1[0-7])\\b",
            "name": "variable.other.enummember"
        },
        "message": {
            "begin": "\\G6\\|",
            "end": "$|(?=//)",
            "name": "variable.other.enummember",
            "patterns": [
                { "include": "#messageString" }
            ]
        },
        "messageString": {
            "match": ".",
            "name": "string"
        },
        "setUberState": {
            "patterns": [
                { "include": "#setBoolUberState" },
                { "include": "#setNumberUberState" }
            ]
        },
        "setBoolUberState": {
            "match": "\\G(8\\|)\\d+\\|\\d+\\|(bool|teleporter)\\|(true|false)\\b",
            "captures": {
                "0": { "name": "entity.name.function" },
                "1": { "name": "variable.other.enummember" }
            }
        },
        "setNumberUberState": {
            "begin": "\\G(8\\|)\\d+\\|\\d+\\|(byte|int|float)\\|[+-]?",
            "end": "$|(?=//)|\\s",
            "captures": {
                "0": { "name": "entity.name.function" },
                "1": { "name": "variable.other.enummember" }
            },
            "patterns": [
                { "include": "#uberStateValue" },
                { "include": "#uberStatePointer" },
                {
                    "begin": "\\G\\[",
                    "end": "$|\\]|(?=//|\\s)",
                    "name": "string.regexp",
                    "patterns": [
                        { "include": "#uberStateValue" },
                        { "include": "#uberStatePointer" },
                        {
                            "begin": ",",
                            "end": "$|(?=(\\]|//|\\s))",
                            "name": "string.regexp",
                            "patterns": [
                                { "include": "#uberStateValue" },
                                { "include": "#uberStatePointer" }
                            ]
                        }
                    ]
                },
                {
                    "match": "\\|(skip=)?\\d+\\b",
                    "name": "variable"
                }
            ]
        },
        "uberStateValue": {
            "match": "\\G\\d+([.,]\\d+)?\\b",
            "name": "entity.name.function"
        },
        "uberStatePointer": {
            "match": "\\G\\$\\(\\d+\\|\\d+\\)",
            "name": "string.regexp"
        },
        "water": {
            "match": "\\G9\\|-?0\\b",
            "name": "variable.other.enummember"
        },
        "bonusItem": {
            "match": "\\G10\\|3[0156]\\b",
            "name": "variable.other.enummember"
        },
        "bonusUpgrade": {
            "match": "\\G11\\|(\\d|4[5-9])\\b",
            "name": "variable.other.enummember"
        },
        "relic": {
            "match": "\\G14\\|(\\d|1[0-2])\\b",
            "name": "variable.other.enummember"
        },
        "progressMessage": {
            "match": "\\G15\\|([023]|1\\|(\\d|1[0-2]))\\b",
            "name": "variable.other.enummember"
        },
        "wheelCommand": {
            "patterns": [
                { "include": "#wheelText" },
                { "include": "#wheelIcon" },
                { "include": "#wheelColor" },
                { "include": "#wheelAction" },
                { "include": "#wheelSticky" },
                { "include": "#wheelSwitch" },
                { "include": "#wheelRemove" },
                { "include": "#wheelClear" }
            ]
        },
        "wheelText": {
            "begin": "\\G16\\|[01]\\|\\d+\\|(\\d|1[01])\\|",
            "end": "$|(?=//)",
            "name": "variable.other.enummember",
            "patterns": [
                { "include": "#messageString" }
            ]
        },
        "wheelIcon": {
            "begin": "\\G16\\|2\\|\\d+\\|(\\d|1[01])\\|",
            "end": "$|(?=//)",
            "name": "variable.other.enummember",
            "patterns": [
                { "include": "#icon" }
            ]
        },
        "icon": {
            "patterns": [
                {
                    "match": "\\G((shard|spell|map|opher|lupo|grom|tuley):)\\d+",
                    "captures": {
                        "0": { "name": "variable" },
                        "1": { "name": "entity.name.type" }
                    }
                },
                {
                    "begin": "\\Gfile:",
                    "end": "$|(?=//)",
                    "name": "entity.name.type",
                    "patterns": [
                        {
                            "match": ".",
                            "name": "string"
                        }
                    ]
                }
            ]
        },
        "wheelColor": {
            "match": "\\G16\\|3\\|\\d+\\|(\\d|1[01])\\|\\d+\\|\\d+\\|\\d+\\|\\d+\\b",
            "name": "variable.other.enummember"
        },
        "wheelAction": {
            "begin": "\\G16\\|4\\|\\d+\\|(\\d|1[01])\\|[0-3]\\|",
            "end": "$|(?=//)",
            "name": "variable.other.enummember",
            "patterns": [
                { "include": "#pickup" }
            ]
        },
        "wheelSticky": {
            "match": "\\G16\\|5\\|\\d+\\|(true|false)\\b",
            "name": "variable.other.enummember"
        },
        "wheelSwitch": {
            "match": "\\G16\\|6\\|\\d+\\b",
            "name": "variable.other.enummember"
        },
        "wheelRemove": {
            "match": "\\G16\\|7\\|\\d+\\|(\\d|1[01])\\b",
            "name": "variable.other.enummember"
        },
        "wheelClear": {
            "match": "\\G16\\|8\\b",
            "name": "variable.other.enummember"
        },
        "shopCommand": {
            "begin": "\\G17\\|0\\|\\d+\\|\\d+\\|",
            "end": "$|(?=//)",
            "name": "variable.other.enummember",
            "patterns": [
                { "include": "#icon" }
            ]
        },
        "command": {
            "patterns": [
                { "include": "#includeCommand" },
                { "include": "#addCommand" },
                { "include": "#nameCommand" },
                { "include": "#parameterCommand" },
                { "include": "#poolCommand" },
                { "include": "#addpoolCommand" },
                { "include": "#flushCommand" },
                { "include": "#setCommand" },
                { "include": "#ifCommand" },
                { "include": "#endifCommand" }
            ]
        },
        "includeCommand": {
            "match": "^(!!(in|ex)clude) \\w+",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "keyword" }
            }
        },
        "addCommand": {
            "begin": "^(!!(add|remove)) (\\d+x )?",
            "end": "$|(?=//)",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "keyword" }
            },
            "patterns": [
                { "include": "#pickup" }
            ]
        },
        "nameCommand": {
            "begin": "^!!name ",
            "end": "$|(?=//)",
            "name": "keyword",
            "patterns": [
                { "include": "#pickup" },
                { "include": "#messageString" }
            ]
        },
        "parameterCommand": {
            "match": "^(!!parameter) \\w+ ((bool:)(true|false)|(int:)\\d+|(float:)\\d+([,.]\\d+)?|(string:)\\w+)\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "keyword" },
                "3": { "name": "entity.name.type" }
            }
        },
        "poolCommand": {
            "begin": "^!!pool ",
            "end": "$|(?=//)",
            "name": "keyword",
            "patterns": [
                {
                    "match": ".",
                    "name": "variable"
                }
            ]
        },
        "addpoolCommand": {
            "match": "^(!!addpool) (\\d+x )",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "keyword" }
            }
        },
        "flushCommand": {
            "match": "^!!flush",
            "name": "keyword"
        },
        "setCommand": {
            "begin": "^!!set ",
            "end": "$|(?=//)",
            "name": "keyword",
            "patterns": [
                {
                    "match": ".",
                    "name": "variable"
                }
            ]
        },
        "ifCommand": {
            "match": "^(!!if) \\w+ (true|false|\\d+([,.]\\d+)?)\\b",
            "captures": {
                "0": { "name": "variable" },
                "1": { "name": "keyword" }
            }
        },
        "endifCommand": {
            "match": "^!!endif",
            "name": "keyword"
        },
        "annotation": {
            "match": "^#\\w+",
            "name": "keyword"
        },
        "placeholder": {
            "patterns": [
                { "include": "#take" },
                { "include": "#PARAM" }
            ]
        },
        "take": {
            "match": "!!take",
            "name": "keyword"
        },
        "PARAM": {
            "match": "\\$PARAM\\((\\w+)\\)",
            "captures": {
                "0": { "name": "entity.name.function" },
                "1": { "name": "variable" }
            }
        },
        "comment": {
            "match": "//.*",
            "name": "comment"
        }
    }
}
